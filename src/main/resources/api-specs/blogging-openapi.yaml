
openapi: 3.0.3

info:
  version: 3.0.3
  title: "cms-user-admin"
  description: |
    
    Dibagian ini akan menangani semua operasi yang dilakukan user untuk mengatur blog nya. ada
    
    /api/v1/admin/
    get
      adminDashboard
    /api/v1/admin/posts
    get
      getAllArticles
    post
      postArticle
    /api/v1/admin/posts/{id}
    get
      getSingleArticle
    put
      editSingleArticle
    patch
      editSingleArticleCategories
    delete
      deleteSingleArticle
    
    /api/v1/admin/categories
    get
      getAllCategories
    post
      createCategories
    /api/v1/admin/categories/{id}
    get
      getSingleCategories ## bersamaan dengan post post nya (landing page single categories) atau edit (tergantung parameter)
    put
      editSingleCategories
    patch
      editSingleCategoryArticles
    delete
      deleteSingleCategories
  

  contact:
    name: "Moh. Fajar Anggara"
    email: "muhamadfajaranggara@gmail.com"

servers:
  - url: "http://localhost:8080"
    description: "Development server"
  - url: "http://31.97.110.252:8080"
    description: "Production server"

tags:
  - name: BloggingController
    description: "Endpoint untuk operasi yang akan dilakukan user sebagai admin (blogger)"


paths:
  /api/v1/admin/:
    get:
      tags:
        - BloggingController
      operationId: "adminDashboard"
      description: "Dashboard admin. categories akan selalu ada dibawah walau sedang search, categories post dll"
      security:
        - BearerAuth: [ ]
      parameters:
        - name: "limit"
          in: query
          description: "Jumlah postingan yang akan ditampilkan"
          schema:
            type: integer
            default: 6
            minimum: 1
          example: 1
        - name: "sortBy"
          in: query
          description: "Mengurutkan hasil berdasarkan"
          schema:
            type: string
            enum:
              - "PUBLISHED"
              - "VIEWS"
              - "TITLE"
            default: "PUBLISHED"
          example: "PUBLISHED"
        - name: sortOrder
          in: query
          description: "Arah pengurutan"
          schema:
            type: string
            enum:
              - "ASC"
              - "DESC"
            default: "ASC"
          example: "ASC"
          required: false
        - name: categorySlug
          in: query
          description: "Menampilkan postingan berdasarkan kategori"
          schema:
            type: string
          example: "nama-kategori"
          required: false
        - name: search
          in: query
          description: "Keyword untuk mencari postingan"
          schema:
            type: string
            minimum: 1
            maximum: 225
          example: "Cara membuat cms dengan springboot"
          required: false
      responses:
        "200":
          description: "Berhasil mengambil data dashboard"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './blogs-openapi.yaml#/components/schemas/BlogFullResponse'

        "401":
          description: "Unauthorized, harap login kembali."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error401Response'

        "403":
          description: "Forbidden, anda tidak bisa melakukan operasi ini."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error403Response'

        "500":
          description: "Server Error."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error500Response'

  /api/v1/admin/posts:
    get:
      tags:
        - BloggingController
      operationId: "getAllArticles"
      description: "Mendapatakan semua postingan."
      security:
        - BearerAuth: [ ]
      responses:
        "200":
          description: "Berhasil mendapatakn semua postingan"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/success200Response'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/ListOfArticleResponses'

        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error401Response'

        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error403Response'

        "500":
          description: "Bad server"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error500Response'
    post:
      tags:
        - BloggingController
      operationId: "postArticle"
      description: "Memposting artikel"
      security:
        - BearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PostRequest'
      responses:
        "200":
          description: "Berhasil memposting sebuah article"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/success200Response'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/postSimpleResponse'

        "400":
          description: "Bad request, Field tidak tepat."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error400Response'
                  - type: object
                    properties:
                      errors:
                        allOf:
                          - $ref: './general-responses-openapi.yaml#/components/schemas/ErrorFieldResponse'

        "500":
          description: "Bad server"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error500Response'

  /api/v1/admin/posts/{id}:
    get:
      tags:
        - BloggingController
      operationId: "getSingleArticle"
      security:
        - BearerAuth: [ ]
      parameters:
        - name: "id"
          in: path
          description: "ID artikel"
          schema:
            type: integer
            format: int64
            example: 1
          required: true
      responses:
        "200":
          description: "Berhasil mendapatakan sebuah postingan"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/success200Response'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/PostResponse'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error401Response'

        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error403Response'

        "500":
          description: "Bad server"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error500Response'
    put:
      tags:
        - BloggingController
      operationId: "updateSingleArticle"
      description: "Mengedit sebuah artikel"
      security:
        - BearerAuth: [ ]
      parameters:
        - name: "id"
          in: path
          description: "ID artikel"
          schema:
            type: integer
            format: int64
            example: 1
          required: true
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PostRequest'
      responses:
        "200":
          description: "Berhasil mengedit sebuah postingan"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/success200Response'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/postSimpleResponse'

        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error400Response'
                  - type: object
                    properties:
                      errors:
                        allOf:
                          - $ref: './general-responses-openapi.yaml#/components/schemas/ErrorFieldResponse'

        "500":
          description: "Bad server"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error500Response'
    patch:
      tags:
        - BloggingController
      operationId: "editSingleArticleCategories"
      description: "Mengedit, menambahkan atau menghapus kategori sebuah artikel"
      security:
        - BearerAuth: [ ]
      parameters:
        - name: "id"
          in: path
          description: "ID artikel"
          schema:
            type: integer
            format: int64
            example: 1
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/PostRequest'

      responses:
        "200":
          description: "Berhasil mengedit sebuah kategori di postingan"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/success200Response'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/PostResponse'

        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error400Response'
                  - type: object
                    properties:
                      errors:
                        allOf:
                          - $ref: './general-responses-openapi.yaml#/components/schemas/ErrorFieldResponse'

        "500":
          description: "Bad server"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error500Response'
    delete:
      tags:
        - BloggingController
      operationId: "deleteSingleArticle"
      description: "Mengahapus sebuah artikel"
      security:
        - BearerAuth: [ ]
      parameters:
        - name: "id"
          in: path
          description: "ID artikel"
          schema:
            type: integer
            format: int64
            example: 1
          required: true
      responses:
        "200":
          description: "Berhasil menghapus postingan"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/success200Response'

        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error401Response'

        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error403Response'

        "500":
          description: "Bad server"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error500Response'

  /api/v1/admin/categories:
    get:
      tags:
        - BloggingController
      operationId: "getAllCategories"
      security:
        - BearerAuth: [ ]
      responses:
        "200":
          description: "Berhasil mengambil semua kategori yang tersedia"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/success200Response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/categorySimpleResponse"

        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error401Response'

        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error403Response'

        "500":
          description: "Bad server"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error500Response'
    post:
      tags:
        - BloggingController
      operationId: "createCategory"
      description: "Membuat kategori baru"
      security:
        - BearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CategoryRequest'
      responses:
        "200":
          description: "Berhasil membuat kategori baru"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/success200Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        allOf:
                          - $ref: '#/components/schemas/CategoriesSimpleDTO'

        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error400Response'
                  - type: object
                    properties:
                      errors:
                        allOf:
                          - $ref: './general-responses-openapi.yaml#/components/schemas/ErrorFieldResponse'

        "500":
          description: "Bad server"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error500Response'

  /api/v1/admin/categories/{id}:
    get:
      tags:
        - BloggingController
      operationId: "getSingleCategory"
      security:
        - BearerAuth: [ ]
      parameters:
        - name: "id"
          in: path
          description: "ID kategori"
          schema:
            type: integer
            format: int64
            example: 1
          required: true
      responses:
        "200":
          description: "Berhasil mendapatakan detail sebuah kategori"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/success200Response'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/categoryResponse'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error401Response'

        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error403Response'

        "500":
          description: "Bad server"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error500Response'
    put:
      tags:
        - BloggingController
      operationId: "editSingleCategory"
      description: "Mengedit sebuah kategori"
      security:
        - BearerAuth: [ ]
      parameters:
        - name: "id"
          in: path
          description: "ID kategori"
          schema:
            type: integer
            format: int64
            example: 1
          required: true
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CategoryRequest'
      responses:
        "200":
          description: "Berhasil mengedit sebuah kategori"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/success200Response'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/CategoriesSimpleDTO'

        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error400Response'
                  - type: object
                    properties:
                      errors:
                        allOf:
                          - $ref: './general-responses-openapi.yaml#/components/schemas/ErrorFieldResponse'

        "500":
          description: "Bad server"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error500Response'
    patch:
      tags:
        - BloggingController
      operationId: "editSingleCategoryArticles"
      description: "Mengedit, menambahkan atau menghapus kategori sebuah artikel"
      security:
        - BearerAuth: []
      parameters:
        - name: "id"
          in: path
          description: "ID category"
          schema:
            type: integer
            format: int64
            example: 1
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/CategoryRequest'

      responses:
        "200":
          description: "Berhasil mengedit sebuah post di category."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/success200Response'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/categoryResponse'

        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error400Response'
                  - type: object
                    properties:
                      errors:
                        allOf:
                          - $ref: './general-responses-openapi.yaml#/components/schemas/ErrorFieldResponse'

        "500":
          description: "Bad server"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error500Response'
    delete:
      tags:
        - BloggingController
      operationId: "deleteSingleCategory"
      description: "Mengahapus sebuah kategori"
      security:
        - BearerAuth: []
      parameters:
        - name: "id"
          in: path
          description: "ID kategori"
          schema:
            type: integer
            format: int64
            example: 1
          required: true
      responses:
        "200":
          description: "Berhasil menghapus kategori"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/success200Response'

        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error401Response'

        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error403Response'

        "500":
          description: "Bad server"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: './general-responses-openapi.yaml#/components/schemas/Error500Response'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "JWT Token bearer <token>"
  schemas:
    PostDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "Identifier untuk setiap post."
          example: 1
          readOnly: true
        title:
          type: string
          minLength: 1
          maxLength: 255
          description: "Judul postingan."
          example: "Cara membuat aplikasi cms dengan springboot"
        slug:
          type: string
          minLength: 1
          maxLength: 255
          description: "URL Friendly dari judul."
          example: "cara-membuat-aplikasi-cms-dengan-springboot"
        content:
          type: string
          minLength: 1
          maxLength: 50000
          description: "Isi dari postingan blog"
          example: "<h1>Cara membuat aplikasi cms dengan springboot</h1><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>"
        excerpt:
          type: string
          minLength: 1
          maxLength: 255
          description: "Rangkuman singkat dari postingan blog"
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
        featured_image_url:
          type: string
          maxLength: 2048
          description: "URL untuk gambar cover"
          example: "https://www.google.com/imgres?q=images%20link&imgurl=https%3A%2F%2Fstatic.wikia.nocookie.net%2Fversus-compendium%2Fimages%2F0%2F00%2FLink_BotW.png%2Frevision%2Flatest%3Fcb%3D20181128185543&imgrefurl=https%3A%2F%2Fversus-compendium.fandom.com%2Fwiki%2FLink_(Breath_of_the_Wild)&docid=6rbDPZVj4wZe7M&tbnid=R9iU04UWo8X02M&vet=12ahUKEwiD9MWtr-uNAxVe4jgGHWUnPH8QM3oECGgQAA..i&w=600&h=600&hcb=2&ved=2ahUKEwiD9MWtr-uNAxVe4jgGHWUnPH8QM3oECGgQAA"
        status:
          type: string
          enum:
            - "DRAFT"
            - "PUBLISHED"
            - "ARCHIVED"
          description: "Status publishing dari post"
          example: "DRAFT"
        user:
          allOf:
            - $ref: "./users-openapi.yaml#/components/schemas/UserSimpleResponse"
        categories:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/CategoriesSimpleDTO'
        created_at:
          type: string
          format: date-time
          description: "Kapan postingan ini dibuat"
          example: "2024-06-10T10:15:00Z"
        published_at:
          type: string
          format: date-time
          description: "Kapan postingan ini dipublish"
          example: "2024-06-10T10:15:00Z"
        updated_at:
          type: string
          format: date-time
          description: "Kapan postingan ini di edit"
          example: "2024-06-10T10:15:00Z"
        deleted_at:
          type: string
          format: date-time
          description: "Kapan Postingan ini dihapus"
          example: "2024-06-10T10:15:00Z"
      required:
        - title
        - slug
        - content
        - excerpt
        - categories

    CategoriesDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "ID kategori"
          example: 1
          readOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 225
          description: "Nama kategori"
          example: "Teknologi Informasi"
        user:
          allOf:
            - $ref: "./users-openapi.yaml#/components/schemas/UserSimpleResponse"
          example: 1
        posts:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/PostSimpleDTO'
        slug:
          type: string
          minLength: 1
          maxLength: 225
          description: "URL friendly nama kategori"
          example: "teknologi-informasi"
        description:
          type: string
          minLength: 1
          maxLength: 225
          description: "Deskripsi untuk kategori ini"
          example: "Kategori ini mencakup semua topik teknologi dan informasi."
        created_at:
          type: string
          format: date-time
          description: "Kapan kategori ini dibuat"
          example: "2024-06-10T10:15:00Z"
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: "Kapan kategori ini terakhir diperbarui"
          example: "2024-06-11T14:30:00Z"
        deleted_at:
          type: string
          format: date-time
          description: "Kapan kategori ini dihapus secara lunak"
          example: "2024-06-12T09:00:00Z"
      required:
        - name
        - user
        - slug
        - description

    PostSimpleDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "Identifier untuk setiap post."
          example: 1
          readOnly: true
        title:
          type: string
          minLength: 1
          maxLength: 255
          description: "Judul postingan."
          example: "Cara membuat aplikasi cms dengan springboot"
        slug:
          type: string
          minLength: 1
          maxLength: 255
          description: "URL Friendly dari judul."
          example: "cara-membuat-aplikasi-cms-dengan-springboot"
        excerpt:
          type: string
          minLength: 1
          maxLength: 255
          description: "Rangkuman singkat dari postingan blog"
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
        categories:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/CategoriesSimpleDTO'
        featured_image_url:
          type: string
          maxLength: 2048
          description: "URL untuk gambar cover"
          example: "https://www.google.com/imgres?q=images%20link&imgurl=https%3A%2F%2Fstatic.wikia.nocookie.net%2Fversus-compendium%2Fimages%2F0%2F00%2FLink_BotW.png%2Frevision%2Flatest%3Fcb%3D20181128185543&imgrefurl=https%3A%2F%2Fversus-compendium.fandom.com%2Fwiki%2FLink_(Breath_of_the_Wild)&docid=6rbDPZVj4wZe7M&tbnid=R9iU04UWo8X02M&vet=12ahUKEwiD9MWtr-uNAxVe4jgGHWUnPH8QM3oECGgQAA..i&w=600&h=600&hcb=2&ved=2ahUKEwiD9MWtr-uNAxVe4jgGHWUnPH8QM3oECGgQAA"
        status:
          type: string
          enum:
            - "DRAFT"
            - "PUBLISHED"
            - "ARCHIVED"
          description: "Status publishing dari post"
          example: "DRAFT"
        user:
          allOf:
            - $ref: "./users-openapi.yaml#/components/schemas/UserSimpleResponse"
        created_at:
          type: string
          format: date-time
          description: "Kapan postingan ini dibuat"
          example: "2024-06-10T10:15:00Z"
        published_at:
          type: string
          format: date-time
          description: "Kapan postingan ini dipublish"
          example: "2024-06-10T10:15:00Z"
      required:
        - id
        - title
        - slug
        - excerpt

    CategoriesSimpleDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "ID kategori"
          example: 1
          readOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 225
          description: "Nama kategori"
          example: "Teknologi Informasi"
        slug:
          type: string
          minLength: 1
          maxLength: 225
          description: "URL friendly nama kategori"
          example: "teknologi-informasi"
      required:
        - name

    PostResponse:
      type: object
      description: "Standar response body untuk single post. Required id, slug, title, exerp"
      allOf:
        - $ref: '#/components/schemas/PostSimpleDTO'
        - type: object
          properties:
            content:
              type: string
              minLength: 1
              maxLength: 50000
              description: "Isi dari postingan blog"
              example: "<h1>Cara membuat aplikasi cms dengan springboot</h1><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>"
            categories:
              type: array
              items:
                $ref: '#/components/schemas/CategoriesSimpleDTO'
              description: "Kumpulan ketegori yang dimiliki oleh post ini (menggunakan kategori dto yang simple"
              example:
                - id: 1
                  name: "Teknologi"
                  slug: "teknologi"
                - id: 2
                  name: "Kecantikan dan kesehatan"
                  slug: "kecantikan-dan-kesehatan"

    postSimpleResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/PostSimpleDTO'

    categoryResponse:
      type: object
      description: "Standar reponse body untuk detail category. Required id, name, slug"
      allOf:
        - $ref: '#/components/schemas/CategoriesSimpleDTO'
        - type: object
          properties:
            user:
              allOf:
                - $ref: "./users-openapi.yaml#/components/schemas/UserSimpleResponse"
            posts:
              type: array
              description: "Articles"
              items:
                allOf:
                  - $ref: '#/components/schemas/PostSimpleDTO'
            description:
              type: string
              minLength: 1
              maxLength: 225
              description: "Deskripsi untuk kategori ini"
              example: "Kategori ini mencakup semua topik teknologi dan informasi."
            created_at:
              type: string
              format: date-time
              description: "Kapan kategori ini dibuat"
              example: "2024-06-10T10:15:00Z"
              readOnly: true

    categorySimpleResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/CategoriesSimpleDTO'

    PostRequest:
      type: object
      description: "Request Body untuk post dan update post"
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
          description: "Judul postingan."
          example: "Cara membuat aplikasi cms dengan springboot"
        slug:
          type: string
          minLength: 1
          maxLength: 255
          description: "URL Friendly dari judul."
          example: "cara-membuat-aplikasi-cms-dengan-springboot"
        content:
          type: string
          minLength: 1
          maxLength: 50000
          description: "Isi dari postingan blog"
          example: "<h1>Cara membuat aplikasi cms dengan springboot</h1><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>"
        excerpt:
          type: string
          minLength: 1
          maxLength: 255
          description: "Rangkuman singkat dari postingan blog"
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
        featured_image_url:
          type: string
          maxLength: 2048
          description: "URL untuk gambar cover"
          example: "https://www.google.com/imgres?q=images%20link&imgurl=https%3A%2F%2Fstatic.wikia.nocookie.net%2Fversus-compendium%2Fimages%2F0%2F00%2FLink_BotW.png%2Frevision%2Flatest%3Fcb%3D20181128185543&imgrefurl=https%3A%2F%2Fversus-compendium.fandom.com%2Fwiki%2FLink_(Breath_of_the_Wild)&docid=6rbDPZVj4wZe7M&tbnid=R9iU04UWo8X02M&vet=12ahUKEwiD9MWtr-uNAxVe4jgGHWUnPH8QM3oECGgQAA..i&w=600&h=600&hcb=2&ved=2ahUKEwiD9MWtr-uNAxVe4jgGHWUnPH8QM3oECGgQAA"
        status:
          type: string
          enum:
            - "DRAFT"
            - "PUBLISHED"
            - "ARCHIVED"
          description: "Status publishing dari post"
          example: "DRAFT"
        categories:
          type: array
          description: "Id dari kategori baru. Front end tolong kolektikan semua id kategori nya."
          items:
            $ref: '#/components/schemas/CategoriesSimpleDTO'
      required:
        - title
        - content

    CategoryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 225
          description: "Nama kategori"
          example: "Teknologi Informasi"
        slug:
          type: string
          minLength: 1
          maxLength: 225
          description: "URL friendly nama kategori"
          example: "teknologi-informasi"
        description:
          type: string
          minLength: 1
          maxLength: 225
          description: "Deskripsi untuk kategori ini"
          example: "Kategori ini mencakup semua topik teknologi dan informasi."
        posts:
          type: array
          description: "Id dari artikel baru. Front end tolong kolektikan semua id post nya."
          items:
            $ref: '#/components/schemas/IdRequest'
      required:
        - name

    IdRequest:
      type: integer
      format: int64
      description: "Id post atau category"


    ArticlesOfCategory:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IdRequest'

    CategoriesOfArticle:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/IdRequest'

    ListOfArticleResponses:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/postSimpleResponse'

    ListOfCategoryResponses:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/categorySimpleResponse'
